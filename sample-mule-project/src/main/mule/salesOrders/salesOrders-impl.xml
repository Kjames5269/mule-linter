<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:avio-core="http://www.mulesoft.org/schema/mule/avio-core" xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/avio-core http://www.mulesoft.org/schema/mule/avio-core/current/mule-avio-core.xsd">
	<sub-flow name="get-salesOrders" doc:id="2c3f9590-d57b-4bf6-9248-9ba0452d22b5">
		<avio-core:custom-logger doc:name="INFO START" doc:id="cdabd899-75cd-4912-8300-791876622630" config-ref="avio-core-config" category="${log.cat}" message="#['START::get-salesOrders']"/>
		<os:retrieve-all doc:name="get all salesOrders " doc:id="742b3d7f-aa8f-4f18-a586-9e7eab20dffe" objectStore="SalesOrder_Object_Store"/>
		<ee:transform doc:name="httpStatus, response" doc:id="5d6925b8-755c-46b6-91fd-f9231141818f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var SUCCESS_MESSAGE = '${http.get.message.ok}'
var NOT_FOUND_MESSAGE = '${http.get.message.nf}'
var SUCCESS_STATUS = ${http.get.status.ok}
var NOT_FOUND_STATUS =  ${http.get.status.nf}
var foundSalesOrders = if(sizeOf(payload) != 0) true else false
---
{
   "message": if(foundSalesOrders) SUCCESS_MESSAGE else NOT_FOUND_MESSAGE,
   "salesOrders": if(foundSalesOrders) payload pluck ((value, key, index) 
   					-> read(value, 'application/json'))  else [] default []
   					
}]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
output application/json
var SUCCESS_STATUS = ${http.get.status.ok}
var NOT_FOUND_STATUS =  ${http.get.status.nf}
var foundSalesOrders = if(sizeOf(payload) != 0) true else false
---
if(foundSalesOrders) SUCCESS_STATUS else NOT_FOUND_STATUS]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<avio-core:custom-logger doc:name="INFO response" doc:id="141ad3c9-9c80-456a-8a3b-4de965b97138" config-ref="avio-core-config" message="#['END::get-salesOrders::payload: ' ++ write(payload, 'application/json')]" category="${log.cat}"/>
	</sub-flow>
	<sub-flow name="get-salesOrder-by-salesOrderId" doc:id="3f735fdf-fbf3-426a-a074-63046144910a" >
	<avio-core:custom-logger doc:name="INFO START" doc:id="a1f85b5c-22d7-4cb0-9c31-28d755f0ecd6" config-ref="avio-core-config" category="${log.cat}" message="#['START::get-salesOrder-by-salesOrderId::salesOrderId: ' ++ write(message.attributes.uriParams.salesOrderId,'application/json')]"/>
		<os:retrieve doc:name="get salesOrder" doc:id="51b3f3e2-5f8e-4860-b798-760e2447028c" key="#[message.attributes.uriParams.salesOrderId]" objectStore="SalesOrder_Object_Store">
			<os:default-value ><![CDATA[#["NOT_FOUND"]]]></os:default-value>
		</os:retrieve>
		<ee:transform doc:name="HttpStatus, response" doc:id="3a7e576f-cc93-435c-a786-8ef8ff1d2965" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json 
var SUCCESS_MESSAGE = '${http.get.message.ok}'
var NOT_FOUND_MESSAGE = '${http.get.message.nf}'
var SUCCESS_STATUS = ${http.get.status.ok}
var NOT_FOUND_STATUS =  ${http.get.status.nf}
var foundSalesOrder = if(sizeOf(payload) != 9) true else false
---
{
   "message": if(foundSalesOrder) SUCCESS_MESSAGE else NOT_FOUND_MESSAGE,
   "salesOrder": if(foundSalesOrder) payload else []
}]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
output application/json 
var SUCCESS_STATUS = ${http.get.status.ok}
var NOT_FOUND_STATUS =  ${http.get.status.nf}
var foundSalesOrder = if(sizeOf(payload) != 9) true else false
---
if(foundSalesOrder) SUCCESS_STATUS else NOT_FOUND_STATUS]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<avio-core:custom-logger doc:name="INFO response" doc:id="da7b30c8-0522-48e4-9ce9-e015010fa847" config-ref="avio-core-config" message="#['END::get-salesOrder-by-salesOrderId::payload: ' ++ write(payload, 'application/json')]" category="${log.cat}"/>
	</sub-flow>
	</mule>
