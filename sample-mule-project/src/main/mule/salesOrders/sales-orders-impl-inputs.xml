<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:avio-core="http://www.mulesoft.org/schema/mule/avio-core"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/avio-core http://www.mulesoft.org/schema/mule/avio-core/current/mule-avio-core.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">
<file:config name="CSV_File_Config" doc:name="File Config" doc:id="12bd1ab6-c3f6-41d4-91b1-74ba006290ac" />
	<vm:config name="SalesOrdersQueue_Config" doc:name="VM Config" doc:id="dce906d0-19a5-4e70-b667-b1eeb726e836">
		<vm:queues >
			<vm:queue queueName="SalesOrdersQueue" />
			<vm:queue queueName="SalesOrdersErrorQueue" />
		</vm:queues>
	</vm:config>
	<os:object-store name="SalesOrder_Object_Store" doc:name="Object store" doc:id="a770bff2-dc61-45f0-a505-71a08a94fe1c" />
	<flow name="csv-file-processing" doc:id="53d9e137-3688-4adb-8122-a37e2e9a06ef" >
		<file:listener doc:name="On New or Updated File CSV" doc:id="b9db4bb0-08a4-406f-acab-3b5aa46df20c" config-ref="CSV_File_Config" directory="/home/vanessa/Escritorio/AVIOConsulting/phase3a/SalesOrder/CSV" moveToDirectory="/home/vanessa/Escritorio/AVIOConsulting/phase3a/SalesOrder/Ready_Files">
			<scheduling-strategy >
				<fixed-frequency />
			</scheduling-strategy>
		</file:listener>
		<set-variable value="#['csv-file-processing']" doc:name="currentFlow" doc:id="00d58952-d6f2-4a0a-9ca0-15175568920d" variableName="currentFlow"/>
		<ee:transform doc:name="CSV payload" doc:id="c062984e-e03e-46ee-98e2-a2679c3376d9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
((payload groupBy $.salesOrderId) pluck $) map {
	"customerId": $[0].customerId,
    "customerName": $[0].customerName,
    "salesOrderId": $[0].salesOrderId,
    "lineItems": $ map (item, idx)-> {      
        "itemNumber": item.itemNumber,
        "quantity": item.quantity,
        "itemType": item.itemType,
        "pricePerUnit": item.pricePerUnit,
        "itemDescription": item.itemDescription
      }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<foreach doc:name="For Each salesOrder" doc:id="6f01192d-babe-4248-a72d-20cd27c477ed" collection="#[payload]">
			<flow-ref doc:name="sales-orders-impl-publish-queue" doc:id="8f71f64a-f707-466f-a905-dfb06f1ced55" name="sales-orders-impl-publish-queue" />
		</foreach>
		<avio-core:custom-logger doc:name="DEBUG csv" doc:id="88969336-ef37-472d-a642-04f7c24f98e9" config-ref="avio-core-config" level="DEBUG" logLocationInfo="true" message="#['csv-file-processing::csv to json: ' ++ write(payload, 'application/json')]" category="${log.cat}"/>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="d93fd8f2-efeb-436b-9347-b1c5e064cef1" >
				<avio-core:custom-logger doc:name="Incorrect Format CSV" doc:id="4b468442-d359-4a09-821a-cd98d64ddd6d" config-ref="avio-core-config" message="#['csv-file-processing::Incorrect Format CSV']" category="${log.cat}" level="INFO" logLocationInfo="false" tracePoint="FLOW" />
			</on-error-continue>
		</error-handler>
	</flow>
	<sub-flow name="queue-publish-message-for-processing" doc:id="b9cb2731-e128-4a4e-8d92-3ccad1b70031">
		<avio-core:custom-logger doc:name="INFO payload" doc:id="6598d7b6-f1a4-47af-8138-fd87cb6638c3" config-ref="avio-core-config" message="#['START::queue-publish-message-for-processing::payload: ' ++ write(payload, 'application/json')]" category="${log.cat}" />
		<set-variable value="queue-publish-message-for-processing" doc:name="currentFlow" doc:id="246197ef-8587-40ab-a00a-dfc69975a759" variableName="currentFlow"/>
		<foreach doc:name="For Each salesOrder" doc:id="e9e73cd1-107f-490d-a1d2-392e78933337" collection="#[payload]">
			<flow-ref doc:name="check-if-valid-order" doc:id="fc9e0708-8ca1-4627-bf6e-629fcbec4cc8" name="check-if-valid-order" />
		</foreach>
		<ee:transform doc:name="httpStatus,response" doc:id="1156938a-bd29-4c2f-814c-16d44894c90f">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
var ACCEPTED_MESSAGE = '${http.post.sales.orders.message.ok}'
---
{
   "message": ACCEPTED_MESSAGE,
   "salesOrderStartedTotal": sizeOf(vars.validSalesOrders default []),
   "salesOrderStarted": vars.validSalesOrders default [],
   "invalidSalesOrdersTotal":sizeOf(vars.invalidSalesOrders default []),
   "invalidSalesOrders":vars.invalidSalesOrders default []
}]]></ee:set-payload>
				</ee:message>
			<ee:variables >
				<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
output application/json
var ACCEPTED_STATUS = ${http.post.sales.orders.status.ok}
---
ACCEPTED_STATUS
]]></ee:set-variable>
			</ee:variables>
			</ee:transform>
		<avio-core:custom-logger doc:name="INFO response" doc:id="dce906d0-19a5-4e70-b667-b1eeb726e836" category="${log.cat}" config-ref="avio-core-config" message="#['END::queue-publish-message-for-processing::response: ' ++ write(payload, 'application/json')]" />
	</sub-flow>
	<sub-flow name="check-if-valid-order" doc:id="fa5e69d4-52b4-44e2-b9f2-57df160b87a5" >
		<avio-core:custom-logger doc:name="DEBUG salesOrder" doc:id="142e453a-85b6-4444-ad11-54764ad5e4c0" config-ref="avio-core-config" message="#['queue-publish-message-for-processing::Sales Order: ' ++ write(payload, 'application/json' )]" category="${log.cat}" />
		<choice doc:name="sales order is valid?" doc:id="8f01b210-0a58-4cc7-991d-2f0a8e4baf9c">
				<when expression="#[sizeOf(payload.lineItems)&gt;0]">
					<flow-ref doc:name="sales-orders-impl-publish-queue" doc:id="ab21f41b-8f0e-4a3c-90f8-acf9c067d0d1" name="sales-orders-impl-publish-queue" />
					<set-variable value="queue-publish-message-for-processing" doc:name="currentFlow" doc:id="ba735576-3bd7-4562-8965-7b28c4aea4f0" variableName="currentFlow" />
					<ee:transform doc:name="accumulator validSalesOrders" doc:id="4550f6f3-adc3-42b0-a6a2-0b678ccdd579">
						<ee:message>
						</ee:message>
						<ee:variables>
							<ee:set-variable variableName="validSalesOrders"><![CDATA[%dw 2.0
output application/java
---
(vars.validSalesOrders default []) + payload]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					
				</when>
				<otherwise>
					<avio-core:custom-logger doc:name="DEBUG invalidSalesOrder" doc:id="ad969cc2-1fb9-4d36-a2f7-482bc611c49e" config-ref="avio-core-config" correlation_id="#[payload.salesOrderId]" category="${log.cat}" message="#['queue-publish-message-for-processing::Invalid Sales Order: ' ++ write(payload,&quot;application/json&quot;)]" />
					<ee:transform doc:name="accumulator invalidSalesOrders, vars salesOrder" doc:id="a631ac98-f317-4320-92ad-b0eeeefdbccb">
						<ee:message>
						</ee:message>
						<ee:variables>
							<ee:set-variable variableName="invalidSalesOrders"><![CDATA[%dw 2.0
output application/java
---
(vars.invalidSalesOrders default []) + payload]]></ee:set-variable>
							<ee:set-variable variableName="salesOrder"><![CDATA[%dw 2.0
output application/json
---
{
      "salesOrderId":payload.salesOrderId,
      "status":"INVALID"
}]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<flow-ref doc:name="set-status-object-store" doc:id="d9e0e9eb-bda9-4bc0-9a29-a21461dd8a44" name="set-status-object-store" />
					<ee:transform doc:name="payload SalesOrderErrorQueue" doc:id="593e1fc1-4f5b-4be5-8962-38ed08f45a63">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "SalesOrder": payload,
    "Error": "INVALID" default ""
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<vm:publish doc:name="Publish SalesOrdersErrorQueue" doc:id="41257882-b557-4188-a6a6-a0a5e12ecf20" config-ref="SalesOrdersQueue_Config" queueName="SalesOrdersErrorQueue" sendCorrelationId="ALWAYS" correlationId='#[payload."SalesOrder".salesOrderId]' />
				</otherwise>
			</choice>
	</sub-flow>
	<sub-flow name="set-status-object-store" doc:id="541d2c07-a792-4a43-b384-f4f3dfdccbb9" >
		<avio-core:custom-logger doc:name="INFO status sales orders to save" doc:id="d6ede406-4972-42b0-bd6f-4753b48f06d8" config-ref="avio-core-config" message="#['status sales orders to save: ' ++ write(vars.order, 'application/json')]" logLocationInfo="true" category="${log.cat}"/>
		<set-variable value="set-status-object-store" doc:name="currentFlow" doc:id="55702007-78a8-4d3b-8dbc-ed967ba364a5" variableName="currentFlow"/>
		<os:store doc:name="Store  sales orders STATUS" doc:id="4f1d6f42-b099-4c17-82ca-5638e95e92bc" key="#[vars.salesOrder.salesOrderId]" objectStore="SalesOrder_Object_Store">
			<os:value ><![CDATA[#[{
      "salesOrderId":vars.salesOrder.salesOrderId,
      "status":vars.salesOrder.status
}]]]></os:value>
		</os:store>
		<avio-core:custom-logger doc:name="INFO salesOrderId" doc:id="fe2d6fad-d739-4c5c-953f-1b1eb75ef2b1" config-ref="avio-core-config" message="#['set-status-object-store::END: salesOrderId' ++ write(vars.salesOrderDetails.salesOrder.salesOrderId,'application/json')]" category="${log.cat}"/>
	</sub-flow>
	<sub-flow name="sales-orders-impl-publish-queue" doc:id="b29b5204-aa83-41b9-8d94-c2ac26ccfabb" >
	<try doc:name="Try" doc:id="6a3cc98f-e2df-4341-a404-9b04e1973459" >
						<set-variable value="sales-orders-impl-publish-queue" doc:name="currentFlow" doc:id="5eef45ae-63bb-41c2-b7d6-12e1c660e406" variableName="currentFlow"/>
			<vm:publish queueName="SalesOrdersQueue" doc:name="Publish SalesOrdersQueue" doc:id="05a37487-122f-4c89-affd-2496d7547dff" config-ref="SalesOrdersQueue_Config" />
						<ee:transform doc:name="vars salesOrder" doc:id="349ae57b-af75-4641-b4ab-1be9c66e513b">
						<ee:message>
						</ee:message>
						<ee:variables>
							<ee:set-variable variableName="salesOrder"><![CDATA[%dw 2.0
output application/json
---
{
      "salesOrderId":payload.salesOrderId,
      "status":"CONFIRMED"
}]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
						<flow-ref doc:name="set-status-object-store" doc:id="6fff544a-5609-4860-aed2-8d2bad54d7af" name="set-status-object-store" />
					</try>
	</sub-flow>		
</mule>
