<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo" xmlns:avio-core="http://www.mulesoft.org/schema/mule/avio-core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/avio-core http://www.mulesoft.org/schema/mule/avio-core/current/mule-avio-core.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd">
	<sub-flow name="product-search-get" doc:id="1741ab79-e4b2-41a3-bb3b-43f4113279e3" >
		<avio-core:custom-logger doc:name="Logger Start" doc:id="551dec7e-41a1-4dbb-ae5f-55a26602d45a" config-ref="AVIO_Core_Config" category="${logcat}.product.sys" correlation_id="#[vars.correlationId]" message="product-search-get::START" payload='#[write(attributes.queryParams, "application/json")]'/>
		<ee:cache doc:name="Cache" doc:id="09efbbfa-5b72-487f-9082-fb2308f3393a" cachingStrategy-ref="Caching_Strategy">
			<mongo:find-documents doc:name="Find documents" doc:id="8bed3051-2b6e-473b-bd27-202675c1b2f9" config-ref="MongoDB_Config" collectionName="products">
			<mongo:condition-query><![CDATA[#[vars.findQuery]]]></mongo:condition-query>
		</mongo:find-documents>
		</ee:cache>
		<ee:transform doc:name="Doc to Response" doc:id="1c850a25-7042-410b-8e5b-ca7e1af879fa">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var result = payload
---
result map ( product , index ) -> {
	productId: product.product_id default 0,
	name: product.name default "",
	manufacturer: product.manufacturer default "",
	summary: product.summary default "",
	description: product.description default "",
	dimensions: product.dimensions default "",
	weight: product.weight default 0,
	weightUom: product.weight_uom default "",
	asin: product.asin default "",
	model: product.model default "",
	averageRating: product.average_rating default 0,
	totalRatings: product.total_ratings default 0,
	imageUrl: product.image_url default "",
	statusCd: product.status_cd default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<avio-core:custom-logger doc:name="Logger End" doc:id="198a4d55-23f9-461e-8687-37abd37184ac" config-ref="AVIO_Core_Config" category="${logcat}.product.sys" correlation_id="#[vars.correlationId]" message="product-search-get::END" payload='#[write(payload, "application/json")]'/>
	</sub-flow>
	<sub-flow name="product-details-get" doc:id="cca898b8-29fc-482d-9cd9-91c079eed049" >
		<avio-core:custom-logger doc:name="Logger Start" doc:id="bfe75979-80b0-4e45-9ae0-0609417f0534" config-ref="AVIO_Core_Config" correlation_id="#[vars.correlationId]" message="product-details-get::START" payload="#[vars.id]" category="${logcat}.product.sys"/>
		<set-variable value="#[%dw 2.0
output application/json
---
{
	product_id: vars.id as Number default 0 
}]" doc:name="findByIdQuery" doc:id="82c95f98-25d7-40ec-9f8a-60b533d1175d" variableName="findByIdQuery" />
		<mongo:find-one-document doc:name="Find one document" doc:id="503a095a-9f79-4a45-a07d-c4058591e9c0" config-ref="MongoDB_Config" collectionName="products">
			<mongo:find-query ><![CDATA[#[vars.findByIdQuery]]]></mongo:find-query>
		</mongo:find-one-document>
		<ee:transform doc:name="Doc to Response" doc:id="99794d9e-3add-49b1-83c6-12536fdae9cc">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	productId: payload.product_id default 0,
	name: payload.name default "",
	manufacturer: payload.manufacturer default "",
	summary: payload.summary default "",
	description: payload.description default "",
	dimensions: payload.dimensions default "",
	weight: payload.weight default 0,
	weightUom: payload.weight_uom default "",
	asin: payload.asin default "",
	model: payload.model default "",
	averageRating: payload.average_rating default 0,
	totalRatings: payload.total_ratings default 0,
	imageUrl: payload.image_url default "",
	statusCd: payload.status_cd default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<avio-core:custom-logger doc:name="Logger End" doc:id="458c876e-d9b6-435d-823f-0fe9d93330cb" config-ref="AVIO_Core_Config" correlation_id="#[vars.correlationId]" message="product-details-get::END" payload='#[write(payload, "application/json")]' category="${logcat}.product.sys"/>
	</sub-flow>
	<sub-flow name="product-details-patch" doc:id="171bdbc9-1edd-47da-a1e2-5808e5c1bcb2" >
		<avio-core:custom-logger doc:name="Logger Start" doc:id="2adb712a-e5db-42f7-921e-238e72fd61bf" config-ref="AVIO_Core_Config" category="${logcat}.product.sys" message="product-review-patch::START" correlation_id="#[vars.correlationId]" payload='#[write(payload, "application/json")]'/>
		<ee:transform doc:name="patch Obj" doc:id="17de87fe-2448-45fc-95c3-335cc34f0a96" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	average_rating: payload.averageRating,
	total_ratings: payload.totalRatings
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value='#[%dw 2.0
output application/json
---
{
	product_id: vars.id as String {format: "#.0"} as Number,
}]' doc:name="findByIdQuery" doc:id="cab673a9-65b4-4da9-ae7e-74cc3b491295" variableName="findByIdQuery" />
		<mongo:update-documents collectionName="products" doc:name="Update documents" doc:id="a088962c-3c84-4335-b079-ec645a6e61e0" config-ref="MongoDB_Config">
			<mongo:find-query ><![CDATA[#[vars.findByIdQuery]]]></mongo:find-query>
			<mongo:content-to-update ><![CDATA[#[payload]]]></mongo:content-to-update>
		</mongo:update-documents>
		<avio-core:custom-logger doc:name="Logger End" doc:id="7c5e3e6b-d5e9-461d-be7b-96f710cf163a" config-ref="AVIO_Core_Config" category="${logcat}.product.sys" message="product-review-patch::END" correlation_id="#[vars.correlationId]" payload="patched"/>
	</sub-flow>
	<sub-flow name="product-reviews-get" doc:id="48e78b75-a10e-4aed-ab4d-c54a437c2895" >
		<avio-core:custom-logger doc:name="Logger Start" doc:id="87f95dac-54d8-4fed-836c-81c4aed16ce5" config-ref="AVIO_Core_Config" category="${logcat}.product.sys" correlation_id="#[vars.correlationId]" message="product-review-get::START" payload="#[vars.id]"/>
		<set-variable value='#[%dw 2.0
output application/json
---
{
	product_id: vars.id as String {format: "#.0"} as Number,
}]' doc:name="findByIdQuery" doc:id="37491435-ec97-47f9-ac9c-221efbd99296" variableName="findByIdQuery" />
		<mongo:find-documents doc:name="Find documents" doc:id="f5c79236-201c-44fc-8234-0be4de0f12e1" config-ref="MongoDB_Config" collectionName="product_reviews">
			<mongo:condition-query ><![CDATA[#[vars.findByIdQuery]]]></mongo:condition-query>
		</mongo:find-documents>
		<ee:transform doc:name="Doc to Response" doc:id="0c33e8da-2a0d-4e5b-ac43-d3e54c85b41e">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var reviews = payload
---
reviews map ( review , index ) -> {
	productId: review.product_id default 0,
	user: review.user default "",
	rating: review.rating default 0,
	review: review.review default "",
	createdDate: review.created_date as String default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<avio-core:custom-logger doc:name="Logger End" doc:id="4b663fef-8464-426c-be6a-a7e7800c7e88" config-ref="AVIO_Core_Config" category="${logcat}.product.sys" correlation_id="#[vars.correlationId]" message="product-review-get::END" payload='#[write(payload, "application/json")]'/>
	</sub-flow>
	<sub-flow name="product-review-post" doc:id="613975d6-06f3-40b3-b3a0-2c99fa05b912" >
		<avio-core:custom-logger doc:name="Logger Start" doc:id="6cd66fb0-1cdd-4e08-be94-e9b55b50ddfd" config-ref="AVIO_Core_Config" category="${logcat}.product.sys" correlation_id="#[vars.correlationId]" message="product-review-post::START" payload='#[write(payload, "application/json")]'/>
		<set-variable value='#[%dw 2.0
output application/json
var productReview = payload
---
{
	"product_id": vars.id as String {format: "#.0"} as Number,
	"user" : productReview.user as String,
	"rating" : productReview.rating as String {format: "#.0"} as Number,
	"review" : productReview.review as String,
	"created_date": now () as String {format: "yyyy-MM-dd HH:mm:ss"}
}]' doc:name="insertDocument" doc:id="9f13b4ca-88b0-4191-9409-e8491528d9d7" variableName="insertDocument"/>
		<mongo:insert-document doc:name="Insert document" doc:id="ec842c65-09c3-4cbe-8373-4fe643f07d62" config-ref="MongoDB_Config" collectionName="product_reviews">
			<mongo:document ><![CDATA[#[vars.insertDocument]]]></mongo:document>
		</mongo:insert-document>
		<avio-core:custom-logger doc:name="Logger End" doc:id="6a5b3026-721d-4dbf-a6ab-8e00c28e84e1" config-ref="AVIO_Core_Config" category="${logcat}.product.sys" correlation_id="#[vars.correlationId]" message="product-review-post::END" payload="Done"/>
	</sub-flow>
	<sub-flow name="product-inventory-get" doc:id="4a9551c4-04e1-4cbc-900a-ab57ecc3408a" >
		<avio-core:custom-logger doc:name="Logger Start" doc:id="c47a1df2-b9c1-4f08-bb1b-d5832bef7189" config-ref="AVIO_Core_Config" category="${logcat}.product.sys" payload="#[vars.id]" correlation_id="#[vars.correlationId]" message="product-inventory-get::START"/>
		<logger level="INFO" doc:name="Logger" doc:id="2b836dcd-f0c2-4c8f-9d9b-37f86398607a" message="#[app.name ++ ' ' ++ flow.name]"/>
		<db:select doc:name="Select" doc:id="00b19dd4-728c-4598-97ac-8e54a5d31f37" config-ref="Database_Config">
			<db:sql >SELECT PRODUCT_ID, QUANTITY_AVAILABLE, AS_OF_DATE, STATUS_CD FROM BC_PRODUCT_INVENTORY WHERE PRODUCT_ID =  :productId</db:sql>
			<db:input-parameters ><![CDATA[#[{
	"productId": vars.id
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Db to Response" doc:id="8a3292e4-9b8f-4e1c-9d8e-be5537f44f5c">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
(payload map (inventory) -> {
	productId: inventory.PRODUCT_ID,
	quantityAvailable: inventory.QUANTITY_AVAILABLE,
	asOfDate: inventory.AS_OF_DATE,
	statusCd: inventory.STATUS_CD
}) reduce ((item, accumulator) -> item )]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<avio-core:custom-logger doc:name="Logger End" doc:id="4a22e9d2-bd0b-4604-90b2-38082bc90053" config-ref="AVIO_Core_Config" category="${logcat}.product.sys" correlation_id="#[vars.correlationId]" payload='#[write(payload, "application/json")]' message="product-inventory-get::END"/>
	</sub-flow>
	<sub-flow name="product-inventory-patch" doc:id="1fbfa193-78e0-44cb-aee3-292a8adddcfd" >
		<avio-core:custom-logger doc:name="Logger Start" doc:id="3b9f28bd-c1ac-4162-a2a3-4fddde95597b" config-ref="AVIO_Core_Config" message="#['product-inventory-patch::START id:' ++ vars.id]" correlation_id="#[vars.correlationId]" payload='#[write(payload, "application/json")]' category="${logcat}.product.sys"/>
		<set-variable value='#[%dw 2.0
output application/java
---
("UPDATE BC_PRODUCT_INVENTORY SET"
++( if(payload.quantityAvailable != null)( " QUANTITY_AVAILABLE = :quantityAvailable" ) else "" )
++( if(payload.statusCd != null)( ", STATUS_CD = :statusCd" ) else "" )
++ ", AS_OF_DATE = :asOfDate"
++ " WHERE PRODUCT_ID = :productId")]' doc:name="updateQuery" doc:id="1a586eae-03b1-4b4b-bee4-ac3b23aebda5" variableName="updateQuery"/>
		<db:update doc:name="Update" doc:id="7c0f0416-2710-4f0b-892a-43fb3670b730" config-ref="Database_Config">
			<db:sql >#[vars.updateQuery]</db:sql>
			<db:input-parameters ><![CDATA[#[{
	"productId": vars.id,
	"quantityAvailable": payload.quantityAvailable,
	"statusCd": payload.statusCd,
	"asOfDate": now() as String {format: "yyyy-MM-dd HH:mm:ss"} 
}]]]></db:input-parameters>
		</db:update>
		<avio-core:custom-logger doc:name="Logger End" doc:id="32793975-2c3e-4469-a761-6b8c59d21a6e" config-ref="AVIO_Core_Config" message="product-inventory-patch::END" correlation_id="#[vars.correlationId]" payload="patched" category="${logcat}.product.sys"/>
	</sub-flow>
	<sub-flow name="product-pricing-get" doc:id="c871129d-0ecd-4551-abd9-be48ff761dfa" >
		<avio-core:custom-logger doc:name="Logger Start" doc:id="0df4f86c-d0e8-4394-9fa4-153a48861cc5" config-ref="AVIO_Core_Config" correlation_id="#[vars.correlationId]" message="product-pricing-get::START" category="${logcat}.product.sys" payload="#[vars.id]"/>
		<db:select doc:name="Select" doc:id="e2600297-8bb6-40cd-a5e9-a11556109fa5" config-ref="Database_Config">
			<db:sql>SELECT PRODUCT_ID, PRICE, CURRENCY, AS_OF_DATE, STATUS_CD FROM BC_PRODUCT_PRICING WHERE PRODUCT_ID =  :productId</db:sql>
			<db:input-parameters><![CDATA[#[{
	"productId": vars.id
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="DB to Response" doc:id="0064af89-d110-45c4-9d42-c633be311f5e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
(payload map (pricing) -> {
	productId: pricing.PRODUCT_ID,
	price: pricing.PRICE,
	currency: pricing.CURRENCY,
	asOfDate: pricing.AS_OF_DATE as String,
	statusCd: pricing.STATUS_CD
}) reduce ((item, accumulator) -> item )]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<avio-core:custom-logger doc:name="Logger End" doc:id="76c51978-a7d7-4237-b924-da32d7f9ffc3" config-ref="AVIO_Core_Config" correlation_id="#[vars.correlationId]" category="${logcat}.product.sys" payload='#[write(payload, "application/json")]' message="product-pricing-get::END"/>
	</sub-flow>
</mule>
